version: "3.9"
services:
  db:
    image: mysql:latest
    container_name: db
    ports: 
      - "3305:3306"
    expose:
      - "3305"
        # DATABASE_HOST ENV VARIABLE MUST BE "db"
    env_file:
      - .env
    volumes:
      - ./.mysql-data/db:/var/lib/mysql 
    restart: always
  app:
    container_name: app
    build: 
      context: backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5000:5000"
    env_file:
      - .env
    links:
      - db
  frontend:
    container_name: frontend
    restart: always
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_PATH=${REACT_APP_API_PATH}
  nginx:
    container_name: nginx
    build: 
      context: "./nginx"
      dockerfile: Dockerfile
    # ports: 
    #   - "80:80"
    links: 
      - app
      - frontend
      - nginx-proxy
      - letsencrypt
    environment:
      - VIRTUAL_HOST= andresgutierrez.me, www.andresgutierrez.me
      - LETSENCRYPT_HOST= andresgutierrez.me, www.andresgutierrez.me
    restart: always
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhsost.d 
      - html:/usr/share/nginx/html
    # labels:
    #   - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - vhostd:/etc/nginx/vhsost.d 
      - html:/usr/share/nginx/html

volumes:
  certs:
  html:
  vhostd:
